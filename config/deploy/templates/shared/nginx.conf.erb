upstream <%= fetch(:application) %>-puma {
  server unix:<%= remote_path_for(shared_path) %>/tmp/sockets/puma.sock fail_timeout=0;
}

<%- config = fetch(:nginx_vhost, {}) -%>
<%- domain = config[:domain] -%>

server {
  server_name   <%= domain %>;
  listen        4443 ssl;
  listen        127.0.0.1:5000;
  root          <%= remote_path_for(deploy_to) %>/current/public;

  access_log    <%= remote_path_for(shared_path) %>/log/nginx.access.log;
  error_log     <%= remote_path_for(shared_path) %>/log/nginx.error.log;

  ssl on;
  ssl_certificate       <%= remote_path_for(shared_path) %>/config/ssl/server.crt;
  ssl_certificate_key   <%= remote_path_for(shared_path) %>/config/ssl/server.key;

  error_page 502 @maintenance;
  error_page 503 @maintenance;

  location / {
    if (-f <%= remote_path_for(shared_path) %>/tmp/maintenance.txt) {
      return 503;
    }

    try_files $uri @rails;
  }

  location = /check.json {
    try_files $uri @rails_nologs;
  }

  location ~ ^/(sidekiq|logs|check)/ {
    try_files $uri @rails_nologs;
  }

  location /cable {
    # Headers
    include /etc/nginx/proxy_params;

    proxy_http_version 1.1;

    proxy_set_header Upgrade    $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    gzip off;
    expires off;

    chunked_transfer_encoding off;
    proxy_buffering           off;
    proxy_cache               off;
    proxy_redirect            off;
    proxy_send_timeout        850000;
    proxy_read_timeout        850000;
    proxy_connect_timeout     850000;

    # Pass to Faye
    proxy_pass http://<%= fetch(:application) %>-puma;
  }

  location @rails {
    # Headers
    include /etc/nginx/proxy_params;

    # Options
    proxy_redirect     off;
    proxy_read_timeout 300;

    # Pass to Rails
    proxy_pass http://<%= fetch(:application) %>-puma;
  }

  location @rails_nologs {
    # Headers
    include /etc/nginx/proxy_params;

    # Options
    proxy_redirect     off;
    proxy_read_timeout 300;

    # Disable logs
    access_log off;

    # Pass to Rails
    proxy_pass http://<%= fetch(:application) %>-puma;
  }

  location @maintenance {
    # Serve static assets if found.
    if (-f $request_filename) {
      break;
    }

    # Set root to the shared directory.
    root <%= remote_path_for(shared_path) %>/public;
    rewrite ^(.*)$ /maintenance.html break;
  }
}
