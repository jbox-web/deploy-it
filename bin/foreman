#!/usr/bin/env ruby

require 'dotenv'
require 'foreman'
require 'foreman/cli'
require 'foreman/engine'

module EnginePatch

  def self.included(base)
    base.send(:prepend, InstanceMethods)
  end


  module InstanceMethods

    # Fix https://github.com/ddollar/foreman/issues/561
    #
    def load_env(filename)
      @env.update Dotenv::Environment.new(filename)
    end


    # Fix https://github.com/ddollar/foreman/issues/553
    #
    def terminate_gracefully
      return if @terminating
      restore_default_signal_handlers
      @terminating = true
      command = ::Foreman.windows? ? 'SIGKILL' : 'SIGTERM'
      Timeout.timeout(options[:timeout]) do
        watch_for_termination do
          system  "sending #{command} to all processes"
          kill_children command
        end while @running.length > 0
      end
    rescue Timeout::Error
      system  "sending SIGKILL to all processes"
      kill_children "SIGKILL"
    end

  end

end

unless Foreman::Engine.included_modules.include?(EnginePatch)
  Foreman::Engine.send(:include, EnginePatch)
end

Foreman::CLI.start
